# coding=utf-8
"""1. Сформувати функцію, що буде обчислювати факторіал заданого користувачем
натурального числа n.
Муха Ігор Євгенійович 122-Г"""

import timeit  # імпорт таймера


def fact_iter(a):  # рішенням за допомогою ітерації
    e = 1
    for i in range(1, a + 1):
        e *= i
    return e


def fac_rekur(x):  # рішення за допомогою рекурсії
    if type(x) is not int:  # перевірка на цілочислене значення
        raise ValueError
    if x < 0:  # перевірка на додатнє число
        raise ValueError
    if x == 0 or x == 1:
        return 1
    else:
        return fac_rekur(x - 1) * x


a = int(input('введіть число, для знаходження факторіалу: '))  # введеня даних
print('Ітераційне рішення факторіалу: ')
print(fact_iter(a))
time1 = timeit.timeit(number=10000)  # таймер 1
print('рішенням за допомогою ітерації: ', time1)

x = int(input('Введіть число, для знаходження факторіалу: '))  # введеня даних
print('рішення за допомогою рекурсії: ')
print(fac_rekur(x))
time2 = timeit.timeit(number=10000)  # таймер 2
print('Час виконання програми : ', time2)

"""Як показали багаторазові тести, для даної задачі доцільніше використання
ітераційного методу розв'язку поставленої задачі. Ітераційно задача розв'язується
значно швидше. Програма більш читабельна через цикл і вона не потребує рекурсії"""
